<!-- Copyright (c) 2018 @gt_tech Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.bitbucket.gt_tech</groupId>
	<artifactId>mongodb-spring-data-querydsl-value-operators-example</artifactId>
	<version>4.0.0</version>
	<packaging>jar</packaging>

	<name>Spring Data QueryDSL value operators Example/demonstration application using MongoDB</name>

	<inceptionYear>2018</inceptionYear>

	<issueManagement>
		<system>Bitbucket Repo Issue Tracker</system>
		<url>https://bitbucket.org/gt_tech/spring-data-querydsl-value-operators/issues</url>
	</issueManagement>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<distribution>Maven Central repository</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git@bitbucket.org:gt_tech/spring-data-querydsl-value-operators.git</connection>
		<developerConnection>scm:git@bitbucket.org:gt_tech/spring-data-querydsl-value-operators.git</developerConnection>
		<url>https://bitbucket.org/gt_tech/spring-data-querydsl-value-operators/</url>
	</scm>

	<developers>
		<developer>
			<id>gt_tech</id>
			<name>GT</name>
			<roles>
				<role>Product owner</role>
				<role>Design</role>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>

	<description>
	Example application demonstrates the usage of spring-data-querydsl-value-operators library using MongoDB
	</description>
	<url>https://bitbucket.org/gt_tech/spring-data-querydsl-value-operators</url>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>snapshots-repo</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>jcenter-snapshots</id>
			<name>jcenter</name>
			<url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>jcenter-release</id>
			<name>jcenter-release</name>
			<url>https://jcenter.bintray.com/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<java.source.version>1.8</java.source.version>
		<java.target.version>1.8</java.target.version>

		<spring.boot.version>2.0.1.RELEASE</spring.boot.version>
		<spring.data.querydsl.value.operators.version>${project.version}</spring.data.querydsl.value.operators.version>
		<springfox.version>2.9.0</springfox.version>

		<groovy.version>2.4.15</groovy.version>
		<spock.version>1.1-groovy-2.4</spock.version>
		<cglib.version>3.2.6</cglib.version>

		<plugin.compiler.version>3.6.1</plugin.compiler.version>
		<plugin.mongodb.mysema.apt.version>1.1.3</plugin.mongodb.mysema.apt.version>
		<plugin.surefire.version>2.19.1</plugin.surefire.version>
		<plugin.failsafe.version>2.19.1</plugin.failsafe.version>
		<plugin.gmavenplus.version>1.5</plugin.gmavenplus.version>
		<skip.integration.tests>false</skip.integration.tests>
		<skip.unit.tests>false</skip.unit.tests>
	</properties>


	<dependencyManagement>

		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.bitbucket.gt_tech</groupId>
			<artifactId>spring-data-querydsl-value-operators</artifactId>
			<version>${spring.data.querydsl.value.operators.version}</version>
		</dependency>

		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-mongodb</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.mongodb</groupId>
					<artifactId>mongo-java-driver</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Embedded MongoDB specific dependencies -->
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<version>1.50.1</version> <!-- Overriding version as new one, default from Spring boot managed dependencies, 
				has some iffy issues w/ windows -->
		</dependency>
		<dependency>
			<groupId>cz.jirutka.spring</groupId>
			<artifactId>embedmongo-spring</artifactId>
			<version>1.3.1</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<!-- <version>1.7.25</version> -->
		</dependency>
		<!-- Some known SLF4J and newer Maven plugin issue w/ M2E -->
		<!-- <dependency> -->
		<!-- <groupId>com.googlecode.slf4j-maven-plugin-log</groupId> -->
		<!-- <artifactId>slf4j-maven-plugin-log</artifactId> -->
		<!-- <version>1.0.0</version> -->
		<!-- </dependency> -->

		<!-- swagger dependencies -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-data-rest</artifactId>
			<version>${springfox.version}</version>
		</dependency>

		<!-- TEST dependencies -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>${spock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-spring</artifactId>
			<version>${spock.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- enables mocking of classes (in addition to interfaces) -->
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- enables mocking of classes without default constructor (together 
				with CGLIB) -->
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>

	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.boot.version}</version>
				<configuration>
					<classifier>exec</classifier>
				</configuration>
				<executions>
					<execution>
						<id>repackage</id>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${plugin.compiler.version}</version>
				<configuration>
					<source>${java.source.version}</source>
					<target>${java.target.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>${plugin.gmavenplus.version}</version>
				<executions>
					<execution>
						<goals>
							<!-- <goal>addSources</goal> -->
							<!-- <goal>compile</goal> -->
							<goal>addTestSources</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>${plugin.mongodb.mysema.apt.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.querydsl</groupId>
						<artifactId>querydsl-apt</artifactId>
						<version>4.1.4</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-sources/querydsl/java
							</outputDirectory>
							<!-- Works with Entity Annotation -->
							<!--<processor>com.querydsl.apt.morphia.MorphiaAnnotationProcessor</processor> -->
							<!-- Works with QueryEntity annotation -->
							<!--<processor>com.querydsl.apt.QuerydslAnnotationProcessor</processor> -->
							<processor>org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor</processor>
							<options>
								<querydsl.logInfo>true</querydsl.logInfo>
								<querydsl.listAccessors>false</querydsl.listAccessors>
								<querydsl.useGetters>true</querydsl.useGetters>
								<querydsl.unknownAsEmbeddable>true</querydsl.unknownAsEmbeddable>
							</options>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/querydsl/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}}/src/test/groovy</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${plugin.surefire.version}</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<skipTests>${skip.unit.tests}</skipTests>
					<includes>
						<include>**/*Test.java</include>
						<!-- include Spock spec, oddly sure requires .java extension even for 
							groovy scripts -->
						<include>**/*Spec*.java</include>
					</includes>
					<excludes>
						<exclude>**/*IT.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${plugin.failsafe.version}</version>
				<configuration>
					<!-- Sets the VM argument line used when integration tests are run. -->
					<argLine>${failsafeArgLine}</argLine>
					<skipTests>${skip.integration.tests}</skipTests>
					<includes>
						<include>**/*IT.java</include>
					</includes>
					<excludes>
						<exclude>**/*Test.java</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>run-integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[2.17,)
										</versionRange>
										<goals>
											<goal>check</goal>
											<goal>checkstyle</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
